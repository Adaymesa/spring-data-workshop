#command extractor used f
#hibernate.hbm2ddl.import_files_sql_extractor = org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor

#Enable logging of generated SQL to the console
hibernate.show_sql = true

#Enable formatting of SQL logged to the console
hibernate.format_sql = true

#Dependent on the underlying database
hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

#Specifies the type of schema generation action to be taken by the persistence provider in regards to sending
#commands directly to the database via JDBC (none, drop, create, drop-and-create)
javax.persistence.schema-generation.database.action = drop-and-create

#Specifies creation of database schemas (boolean)
javax.persistence.create-database-schemas = false

#Specifies whether schema generation commands for schema creation are to be determine based on object/relational
#mapping metadata, DDL scripts, or a combination of the two (script, metadata-then-script, script-then-metadata)
#javax.persistence.schema-generation.create-source = script

#Specifies whether schema generation commands for schema dropping are to be determine based on object/relational
#mapping metadata, DDL scripts, or a combination of the two (Same as above)
#javax.persistence.schema-generation.drop-source =

#Specifies the CREATE script file
#javax.persistence.schema-generation.create-script-source =

#Specifies the DROP script file
#javax.persistence.schema-generation.drop-script-source =

#Specifies the SQL load script.
#javax.persistence.sql-load-script-source =